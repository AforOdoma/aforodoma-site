# .github/workflows/deploy.yml
name: Deploy Website to S3 and CloudFront

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Verify AWS connection
        run: |
          echo "Testing AWS connection..."
          aws s3 ls s3://dev-aforodoma-site-bucket

      - name: Navigate to website directory
        working-directory: ./portfolio-website-final
        run: |
          echo "Switched to directory: $(pwd)"
          echo "Listing contents:"
          ls -la

      - name: List files to be deployed
        working-directory: ./portfolio-website-final
        run: |
          echo "HTML files:"
          find . -name "*.html"
          echo ""
          echo "JavaScript files:"
          find . -name "*.js"
          echo ""
          echo "CSS files:"
          find . -name "*.css"

      - name: Deploy to S3
        working-directory: ./portfolio-website-final
        run: |
          echo "Deploying files to S3..."
          aws s3 sync . s3://dev-aforodoma-site-bucket \
            --exclude ".github/*" \
            --exclude "*.yml" \
            --exclude "*.yaml" \
            --exclude "*.md" \
            --delete \
            --cache-control "max-age=0,no-cache,no-store,must-revalidate"

      - name: Verify S3 upload
        run: |
          echo "Files uploaded to S3:"
          aws s3 ls s3://dev-aforodoma-site-bucket --recursive

      - name: Get CloudFront Distribution ID
        id: get-distribution
        run: |
          DIST_ID=$(aws cloudfront list-distributions --query 'DistributionList.Items[?Aliases.Items[?contains(@, `aforodoma.com`)]].Id' --output text)
          echo "Distribution ID: $DIST_ID"
          echo "distribution_id=$DIST_ID" >> $GITHUB_OUTPUT

      - name: Invalidate CloudFront cache
        run: |
          echo "Creating CloudFront invalidation..."
          aws cloudfront create-invalidation \
            --distribution-id ${{ steps.get-distribution.outputs.distribution_id }} \
            --paths "/*"

      - name: Deployment summary
        run: |
          echo "✅ Deployment completed successfully!"
          echo "🌐 Your website should be available at:"
          echo "   - https://aforodoma.com"
          echo "   - https://www.aforodoma.com"
          echo ""
          echo "⏰ CloudFront cache invalidation may take 5–15 minutes to complete."
          echo "📊 S3 bucket: dev-aforodoma-site-bucket"
          echo "🔄 Distribution ID: ${{ steps.get-distribution.outputs.distribution_id }}"
